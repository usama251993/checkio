/**
 * # End Zeros
 *
 * - Difficulty: Elementary
 *
 * ## Description
 * Try to find out how many zeros a given number has at the end.
 *
 * ## Input
 * A positive `int`.
 *
 * ## Output
 * An `int`.
 *
 * ## Example
 * ```ts
 * endZeros(0) == 1;
 * endZeros(1) == 0;
 * endZeros(10) == 1;
 * endZeros(101) == 0;
 * endZeros(245) == 0;
 * endZeros(100100) == 2;
 * ```
 *
 *
 * @param {number} value
 * @return {*}  {number}
 */
function endZeros(value: number): number {
  return value.toString().match(/0*$/g)?.join('').length ?? 0;
}

const best = (value: number): number => {
  const s = String(value);
  return s.length - s.replace(/0*$/, '').length;
};

/**
 * Fails in `strict` mode
 */
const creativeFaulty = (n: number) => /* String(n).match(/0*$/)[0].length; */ null;

/**
 * Generated by GitHub Copilot
 * @param n 
 * @returns 
 */
const creative = (n: number) => {
  let count = 0;
  let s = String(n);
  for (let i = s.length - 1; i >= 0; i--) {
    if (s[i] === '0') count++;
    else break;
  }
  return count;
};

export { endZeros as my, best, creative };
